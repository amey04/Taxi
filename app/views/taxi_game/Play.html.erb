<html>
    <head>
        <title>Play</title>
    </head>
    <body>
    	<div align="center">
    		<h1> Taxi Game </h1>	
    	</div>
    	
        <div class="wrapper" align="center" style="padding-top: 10px">
            <canvas align="center" id="game" width="400" height="10" tabindex="1"></canvas>
            
            <style type="text/css">
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}
.tg .tg-s6z2{text-align:center}
</style>
<table id="summary" class="tg">
  <tr>
    <th class="tg-s6z2" colspan="2">Destination</th>
    <th class="tg-s6z2" colspan="2">(-3, 3)</th>
  </tr>
  <tr>
    <td class="tg-031e" colspan="4"></td>
  </tr>
  <tr>
    <td class="tg-s6z2">Object</td>
    <td class="tg-s6z2">Location</td>
    <td class="tg-s6z2">Additional Features</td>
    <td class="tg-031e"></td>
  </tr>
  <tr>
    <td class="tg-031e">A1</td>
    <td class="tg-031e">(-3, -1)</td>
    <td class="tg-031e">State</td>
    <td class="tg-031e">1</td>
  </tr>
  <tr>
    <td class="tg-031e">B1_N</td>
    <td class="tg-031e">(0, -1)</td>
    <td class="tg-031e"></td>
    <td class="tg-031e"></td>
  </tr>
  <tr>
    <td class="tg-031e">B2_S</td>
    <td class="tg-031e">(0, 2)</td>
    <td class="tg-031e"></td>
    <td class="tg-031e"></td>
  </tr>
  <tr>
    <td class="tg-031e">B3_E</td>
    <td class="tg-031e">(1, 0)</td>
    <td class="tg-031e"></td>
    <td class="tg-031e"></td>
  </tr>
  <tr>
    <td class="tg-031e">B4_W</td>
    <td class="tg-031e">(-1, 0)</td>
    <td class="tg-031e"></td>
    <td class="tg-031e"></td>
  </tr>
</table>

        </div>
        <script type="text/javascript">

        	/*var actions = new Array("action1", "2", "3", "4", "5", "6");
        	*/
			var taxi_location = {
				x: 3,
				y: 1
			};
			var passanger_location = {
				x: 0,
				y: 0
			};
			var destination_location = {
				x: 0,
				y: 4
			}
			var wall1 = {
				x: 2,
				y: 0
			}
			var wall2 = {
				x: 2,
				y: 1
			}
			var wall3 = {
				x: 1,
				y: 3
			}
			var wall4 = {
				x: 1,
				y: 4
			}
			var wall5 = {
				x: 3,
				y: 3
			}
			var wall6 = {
				x: 3,
				y: 4
			}
			var walls = [];
			walls.push(wall1);
			walls.push(wall2);
			walls.push(wall3);
			walls.push(wall4);
			walls.push(wall5);
			walls.push(wall6);
			
			var passenger_row = 3;
			var destination_row = 0;
			var wall_north_row = 4;
			
			var is_touching_n=false, is_touching_s=false, is_touching_w=false, is_touching_e=false;
			var is_in_taxi=false;
			
        	var actions = {
        		a1: function() { action1(); },
        		a2: function() { action2(); },
        		a3: function() { action3(); },
        		a4: function() { action4(); },
        		a5: function() { action5(); },
        		a6: function() { action6(); }
        	};
        	var i = 0;
			for (a in actions) {
    			actions[i] = actions[a];
    			++i;
			}
			
        	/*function shuffleActions {
        		var cnt=actions.length, index, tmp;
        		while (cnt > 0) {
        			index = Math.floor(Math.random() * cnt);
        			cnt--;
        			tmp = actions[cnt];
        			actions[cnt] = actions[index];
        			actions[index] = tmp;
        		}
        	}*/
        	function printSummary() {
        		var wall_on_east = {
					x: 4,
					y: taxi_location.y
				};
				var wall_on_west = {
					x: 0,
					y: taxi_location.y
				};
				var wall_on_south = {
					x: taxi_location.x,
					y: 4
				};
				var wall_on_north = {
					x: taxi_location.x,
					y: 0
				};
				
				/*
				 * Print destination location
				 */
				var tab = document.getElementById("summary").rows[destination_row].cells;
				tab[1].innerHTML = "( "+(destination_location.x-taxi_location.x)+", "+(destination_location.y-taxi_location.y)+" )";
				
        		/*
        		 * Print Taxi features
        		 */
        		/*var tab = document.getElementById("summary").rows[1].cells;
        		tab[3].innerHTML=is_touching_n+'<br>'+is_touching_e+'<br>'+is_touching_w+'<br>'+is_touching_s;
        		tab[1].innerHTML="( "+taxi_location.x+", "+taxi_location.y+" )";
        		*/
        		/*
        		 * Print passenger location
        		 */
        		tab = document.getElementById("summary").rows[passenger_row].cells;
        		if(is_in_taxi == true)
        			tab[3].innerHTML=2;
        		else
        			tab[3].innerHTML=1;
        			
        		tab[1].innerHTML="( "+(passanger_location.x-taxi_location.x)+", "+(passanger_location.y-taxi_location.y)+" )";
        		
        		/*
        		 * Find walls in 4 direction from taxi agent
        		 */
        		for(w in walls) {
					if(walls[w].x < taxi_location.x && walls[w].y == taxi_location.y) {
						wall_on_west.x = walls[w].x;
						wall_on_west.y = walls[w].y;
					}
					else if(walls[w].x > taxi_location.x && walls[w].y == taxi_location.y) {
						wall_on_east.x = walls[w].x;
						wall_on_east.y = walls[w].y;
					}
					else if(walls[w].y < taxi_location.y && walls[w].x == taxi_location.x) {
						wall_on_north.x = walls[w].x;
						wall_on_north.y = walls[w].y;
					}
					else if(walls[w].y > taxi_location.y && walls[w].x == taxi_location.x) {
						wall_on_south.x = walls[w].x;
						wall_on_south.y = walls[w].y;
					}
				}
				/*
				 * Print wall locations for 4 sides
				 */
				tab = document.getElementById("summary").rows[wall_north_row].cells;
				tab[1].innerHTML="( "+(wall_on_north.x-taxi_location.x)+", "+(wall_on_north.y-taxi_location.y)+" )";
				tab = document.getElementById("summary").rows[wall_north_row+1].cells;
				tab[1].innerHTML="( "+(wall_on_south.x-taxi_location.x)+", "+(wall_on_south.y-taxi_location.y)+" )";
				tab = document.getElementById("summary").rows[wall_north_row+2].cells;
				tab[1].innerHTML="( "+(wall_on_east.x-taxi_location.x)+", "+(wall_on_east.y-taxi_location.y)+" )";
				tab = document.getElementById("summary").rows[wall_north_row+3].cells;
				tab[1].innerHTML="( "+(wall_on_west.x-taxi_location.x)+", "+(wall_on_west.y-taxi_location.y)+" )";
        	}
        	
			function checkMoveAgainstWalls(newX, newY) {
				for(w in walls) {
					if(walls[w].x == newX && walls[w].y == newY) {
						return false;
					}
				}
				return true;
			}
			
        	function action1() { //go west
        		if(taxi_location.x > 0 && checkMoveAgainstWalls(taxi_location.x-1, taxi_location.y)) {
        			taxi_location.x -= 1;
        			is_touching_e = false;
        			if(is_in_taxi == true) {
        				passanger_location.x -= 1;
        			}
        		}
        		if(taxi_location.x == 0) {
        			is_touching_w = true;
        		}
        		else {
        			is_touching_w = false;
        		}
        		alert("Action: Go West");
        		printSummary();
        	}
        	
            function action2() { //go east
        		if(taxi_location.x < 4 && checkMoveAgainstWalls(taxi_location.x+1, taxi_location.y)) {
        			taxi_location.x += 1;
        			is_touching_w = false;
        			if(is_in_taxi == true) {
        				passanger_location.x += 1;
        			}
        		}
        		if(taxi_location.x == 4) {
        			is_touching_e = true;
        		}
        		else {
        			is_touching_e = false;
        		}
        		alert("Action: Go East");
        		printSummary();
        	}
        	
        	function action3() { //go north
        		if(taxi_location.y > 0 && checkMoveAgainstWalls(taxi_location.x, taxi_location.y-1)) {
        			taxi_location.y -= 1;
        			is_touching_s = false;
        			if(is_in_taxi == true) {
        				passanger_location.y -= 1;
        			}
        		}
        		if(taxi_location.y == 0) {
        			is_touching_n = true;
        		}
        		else {
        			is_touching_n = false;
        		}
        		alert("Action: Go North");
        		printSummary();
        	} 
        	function action4() { //go south
        		alert("Action: Go South");
        		if(taxi_location.y < 4 && checkMoveAgainstWalls(taxi_location.x, taxi_location.y+1)) {
        			taxi_location.y += 1;
        			is_touching_n = false;
        			if(is_in_taxi == true) {
        				passanger_location.y += 1;
        			}
        		}
        		if(taxi_location.y == 4) {
        			is_touching_s = true;
        		}
        		else {
        			is_touching_s = false;
        		}
        		printSummary();
        	} 
        	
        	function action5() { // pickup
        		alert("Action: Pickup");
        		if(taxi_location.x == passanger_location.x && taxi_location.y == passanger_location.y) {
        			is_in_taxi=true;
        		}
        		printSummary();
        	} 
        	function action6() { //drop off
        		alert("Action: Drop-off");
        		if(destination_location.x == taxi_location.x && destination_location.y == taxi_location.y) {
        			if(is_in_taxi == true) {
        				is_in_taxi = false;
        				alert("- SUCCESS -");
        				location.reload();
        			}
        		}
        		printSummary();
        	}
        	
        	function shuffle() {
				/*var counter = array.length, temp, index;    
				while (counter > 0) {
		        	index = Math.floor(Math.random() * counter);
					counter--;
        			temp = array[counter];
        			array[counter] = array[index];
        			array[index] = temp;
   			 	}
				return array;*/
				var actiona1 = {};
				var check = [0, 0, 0, 0, 0, 0, 0];
				var counter=6;
				var index, max=0, k=0;
				for(a in actions) {
					index = Math.floor(Math.random() * counter+1 );
					while(check[index-1] != 0 && max < 6) {
						index = Math.floor(Math.random() * counter+1);
					}
					if(max == 6)
						return;
					check[index-1] = 1;
					actions1[k++] = actions[index-1];
					max++;
				}
				var i=0;
				while(i < 6) {
					actions[i] = actions1[i++];
				}
			}
			
        var el = document.getElementById("game");
		el.onkeydown = function(evt) {
                evt = evt || window.event;
                if(evt.keyCode == 49) { //1
                	actions[0]();
                }
                else if(evt.keyCode == 50) { //2
                	actions[1]();
                }
                else if(evt.keyCode == 51) { //3
                	actions[2]();
                }
                else if(evt.keyCode == 52) { //4
                	actions[3]();
                }
                else if(evt.keyCode == 53) { //5
                	actions[4]();
                }
                else if(evt.keyCode == 54) { //6
                	actions[5]();
                }
                else {
                	alert("Invalid key");
                	shuffle();
                }
            };

            /*el.onkeyup = function(evt) {
                evt = evt || window.event;
                alert("keyup: " + evt.keyCode);
            };*/
        </script>
    </body>
</html>